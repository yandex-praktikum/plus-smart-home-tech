name: Smart Home Tech Tests

on:
  workflow_dispatch:
  pull_request:
  workflow_call:

jobs:
  check-repo:
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'pull_request' }}
    steps:
      - name: Check repo not fork and public
        run: |
          REPO=$(gh api -H "Accept: application/vnd.github+json" -H "X-GitHub-Api-Version: 2022-11-28" "/repos/${GITHUB_REPOSITORY}")
          FORK=$(jq '.fork' <<< "$REPO")
          PRIVATE=$(jq '.private' <<< "$REPO")
          echo "FORK='$FORK', PRIVATE='$PRIVATE', GITHUB_REPOSITORY_OWNER=${GITHUB_REPOSITORY_OWNER} "
          if [[ "$FORK" == "true" ]]
          then
            echo "Use the repository automatically created by Yandex Practicum (works in fork repositories are not accepted)"
            echo "Используйте только репозиторий созданный Yandex Practicum, работы в форк репозитории не принимаются"
            exit -1
          fi
          if [[ "$GITHUB_REPOSITORY_OWNER" == "yandex-praktikum" ]]
          then
            echo "Use the repository automatically created by Yandex Practicum (works in fork repositories are not accepted)"
            echo "Используйте только репозиторий созданный Yandex Practicum, работы в форк репозитории не принимаются"
            exit -2
          fi
          if [[ "$PRIVATE" == "true" && "$GITHUB_REPOSITORY_OWNER" != "praktikum-java" ]]
          then
            echo "Share your repository, make it public"
            echo "Откройте доступ к вашему репозиторию, сделайте его публичным"
            exit -3
          fi
        env:
          GH_TOKEN: ${{ github.token }}

      - name: Check branch name
        run: |
          if [[ "$GITHUB_HEAD_REF" == "1-collector-json" ]]
          then
            echo "Collector json service - OK"
            if [[ "$GITHUB_BASE_REF" != "main" && "$GITHUB_REPOSITORY_OWNER" != "praktikum-java" ]]
            then
              echo "Set the pull request to merge branch 'main' (instead of '$GITHUB_BASE_REF')"
              echo "Задайте в Pull request ветку слияния 'main' (вместо '$GITHUB_BASE_REF')"
              exit -2
            fi
            echo "Github target '$GITHUB_BASE_REF' - OK"
            exit
          fi
          if [[ "$GITHUB_HEAD_REF" == "2-collector-grpc" ]]
          then
            echo "Collector grpc service - OK"
            PULL=$(gh api -H "Accept: application/vnd.github+json" -H "X-GitHub-Api-Version: 2022-11-28"  /repos/${GITHUB_REPOSITORY}/pulls?head=${GITHUB_REPOSITORY_OWNER}:1-collector-json || true)
            OPEN=$(jq '. | length' <<< "$PULL")
            if [[ "$OPEN" != "0" && "$GITHUB_REPOSITORY_OWNER" != "praktikum-java" ]]
            then
              PULL_URL=$(jq '.[0].html_url' <<< "$PULL")
              echo "Merge the 1-collector-json branch pull request: ${PULL_URL}"
              echo "Объедините pull request ветки 1-collector-json: ${PULL_URL}"
              exit -3
            fi
            echo "Collector json service - Merged"
            if [[ "$GITHUB_BASE_REF" != "develop" && "$GITHUB_REPOSITORY_OWNER" != "praktikum-java" ]]
            then
              echo "Set the pull request to merge branch 'develop' (instead of '$GITHUB_BASE_REF')"
              echo "Задайте в Pull request ветку слияния 'develop' (вместо '$GITHUB_BASE_REF')"
              exit -2
            fi
            echo "Github target '$GITHUB_BASE_REF' - OK"
            exit
          fi
          if [[ "$GITHUB_HEAD_REF" == "3-aggregator" ]]
          then
            echo "Aggregator service - OK"
            PULL=$(gh api -H "Accept: application/vnd.github+json" -H "X-GitHub-Api-Version: 2022-11-28"  /repos/${GITHUB_REPOSITORY}/pulls?head=${GITHUB_REPOSITORY_OWNER}:2-collector-grpc || true)
            OPEN=$(jq '. | length' <<< "$PULL")
            if [[ "$OPEN" != "0" && "$GITHUB_REPOSITORY_OWNER" != "praktikum-java" ]]
            then
              PULL_URL=$(jq '.[0].html_url' <<< "$PULL")
              echo "Merge the 2-collector-grpc branch pull request: ${PULL_URL}"
              echo "Объедините pull request ветки 2-collector-grpc: ${PULL_URL}"
              exit -4
            fi
            echo "Collector grpc service - Merged"
              if [[ "$GITHUB_BASE_REF" != "develop" && "$GITHUB_REPOSITORY_OWNER" != "praktikum-java" ]]
            then
              echo "Set the pull request to merge branch 'develop' (instead of '$GITHUB_BASE_REF')"
              echo "Задайте в Pull request ветку слияния 'develop' (вместо '$GITHUB_BASE_REF')"
              exit -2
            fi
            echo "Github target '$GITHUB_BASE_REF' - OK"
            exit
          fi
          if [[ "$GITHUB_HEAD_REF" == "4-analyzer" ]] 
          then
            echo "Analyzer service - OK"
            PULL=$(gh api -H "Accept: application/vnd.github+json" -H "X-GitHub-Api-Version: 2022-11-28"  /repos/${GITHUB_REPOSITORY}/pulls?head=${GITHUB_REPOSITORY_OWNER}:3-aggregator || true)
            OPEN=$(jq '. | length' <<< "$PULL")
            if [[ "$OPEN" != "0" && "$GITHUB_REPOSITORY_OWNER" != "praktikum-java" ]]
            then
              PULL_URL=$(jq '.[0].html_url' <<< "$PULL")
              echo "Merge the 3-aggregator branch pull request: ${PULL_URL}"
              echo "Объедините pull request ветки 3-aggregator: ${PULL_URL}"
              exit -5
            fi
            echo "Aggregator service - Merged"
            if [[ "$GITHUB_BASE_REF" != "develop" && "$GITHUB_REPOSITORY_OWNER" != "praktikum-java" ]]
            then
              echo "Set the pull request to merge branch 'develop' (instead of '$GITHUB_BASE_REF')"
              echo "Задайте в Pull request ветку слияния 'develop' (вместо '$GITHUB_BASE_REF')"
              exit -2
            fi
            echo "Github target '$GITHUB_BASE_REF' - OK"
            exit
          fi
          if [[ "$GITHUB_HEAD_REF" == "develop" ]] 
          then
            echo "Analyzer service - OK"
            PULL=$(gh api -H "Accept: application/vnd.github+json" -H "X-GitHub-Api-Version: 2022-11-28"  /repos/${GITHUB_REPOSITORY}/pulls?head=${GITHUB_REPOSITORY_OWNER}:4-analyzer || true)
            OPEN=$(jq '. | length' <<< "$PULL")
            if [[ "$OPEN" != "0" && "$GITHUB_REPOSITORY_OWNER" != "praktikum-java" ]]
            then
              PULL_URL=$(jq '.[0].html_url' <<< "$PULL")
              echo "Merge the 4-analyzer branch pull request: ${PULL_URL}"
              echo "Объедините pull request ветки 4-analyzer: ${PULL_URL}"
              exit -6
            fi
            echo "Analyzer service - Merged"
            if [[ "$GITHUB_BASE_REF" != "main" && "$GITHUB_REPOSITORY_OWNER" != "praktikum-java" ]]
            then
              echo "Set the pull request to merge branch 'main' (instead of '$GITHUB_BASE_REF')"
              echo "Задайте в Pull request ветку слияния 'main' (вместо '$GITHUB_BASE_REF')"
              exit -2
            fi
            echo "Github target '$GITHUB_BASE_REF' - OK"
            exit
          fi
          if [[ "$GITHUB_HEAD_REF" == "5-config-server" ]] 
          then
            echo "Config server - OK"
            PULL=$(gh api -H "Accept: application/vnd.github+json" -H "X-GitHub-Api-Version: 2022-11-28"  /repos/${GITHUB_REPOSITORY}/pulls?head=${GITHUB_REPOSITORY_OWNER}:develop || true)
            OPEN=$(jq '. | length' <<< "$PULL")
            if [[ "$OPEN" != "0" && "$GITHUB_REPOSITORY_OWNER" != "praktikum-java" ]]
            then
              PULL_URL=$(jq '.[0].html_url' <<< "$PULL")
              echo "Merge the 4-analyzer branch pull request: ${PULL_URL}"
              echo "Объедините pull request ветки 4-analyzer: ${PULL_URL}"
              exit -6
            fi
            echo "Analyzer service - Merged"
            if [[ "$GITHUB_BASE_REF" != "main" && "$GITHUB_REPOSITORY_OWNER" != "praktikum-java" ]]
            then
              echo "Set the pull request to merge branch 'main' (instead of '$GITHUB_BASE_REF')"
              echo "Задайте в Pull request ветку слияния 'main' (вместо '$GITHUB_BASE_REF')"
              exit -2
            fi
            echo "Github target '$GITHUB_BASE_REF' - OK"
            exit
          fi
          if [[ "$GITHUB_HEAD_REF" == "6-discovery-server" ]] 
          then
            echo "Discovery server - OK"
            PULL=$(gh api -H "Accept: application/vnd.github+json" -H "X-GitHub-Api-Version: 2022-11-28"  /repos/${GITHUB_REPOSITORY}/pulls?head=${GITHUB_REPOSITORY_OWNER}:5-config-server || true)
            OPEN=$(jq '. | length' <<< "$PULL")
            if [[ "$OPEN" != "0" && "$GITHUB_REPOSITORY_OWNER" != "praktikum-java" ]]
            then
              PULL_URL=$(jq '.[0].html_url' <<< "$PULL")
              echo "Merge the 5-config-server branch pull request: ${PULL_URL}"
              echo "Объедините pull request ветки 5-config-server: ${PULL_URL}"
              exit -7
            fi
            echo "Config server - Merged"
            if [[ "$GITHUB_BASE_REF" != "main" && "$GITHUB_REPOSITORY_OWNER" != "praktikum-java" ]]
            then
              echo "Set the pull request to merge branch 'main' (instead of '$GITHUB_BASE_REF')"
              echo "Задайте в Pull request ветку слияния 'main' (вместо '$GITHUB_BASE_REF')"
              exit -2
            fi
            echo "Github target '$GITHUB_BASE_REF' - OK"
            exit
          fi
          if [[ "$GITHUB_HEAD_REF" == "7-spring-cloud-microservices" ]] 
          then
            echo "Cloud microservices - OK"
            PULL=$(gh api -H "Accept: application/vnd.github+json" -H "X-GitHub-Api-Version: 2022-11-28"  /repos/${GITHUB_REPOSITORY}/pulls?head=${GITHUB_REPOSITORY_OWNER}:6-discovery-server || true)
            OPEN=$(jq '. | length' <<< "$PULL")
            if [[ "$OPEN" != "0" && "$GITHUB_REPOSITORY_OWNER" != "praktikum-java" ]]
            then
              PULL_URL=$(jq '.[0].html_url' <<< "$PULL")
              echo "Merge the 6-discovery-server branch pull request: ${PULL_URL}"
              echo "Объедините pull request ветки 6-discovery-server: ${PULL_URL}"
              exit -8
            fi
            echo "Discovery server - Merged"
            if [[ "$GITHUB_BASE_REF" != "main" && "$GITHUB_REPOSITORY_OWNER" != "praktikum-java" ]]
            then
              echo "Set the pull request to merge branch 'main' (instead of '$GITHUB_BASE_REF')"
              echo "Задайте в Pull request ветку слияния 'main' (вместо '$GITHUB_BASE_REF')"
              exit -2
            fi
            echo "Github target '$GITHUB_BASE_REF' - OK"
            exit
          fi
          if [[ "$GITHUB_HEAD_REF" == "8-gateway" ]] 
          then
            echo "API Gateway - OK"
            PULL=$(gh api -H "Accept: application/vnd.github+json" -H "X-GitHub-Api-Version: 2022-11-28"  /repos/${GITHUB_REPOSITORY}/pulls?head=${GITHUB_REPOSITORY_OWNER}:7-spring-cloud-microservices || true)
            OPEN=$(jq '. | length' <<< "$PULL")
            if [[ "$OPEN" != "0" && "$GITHUB_REPOSITORY_OWNER" != "praktikum-java" ]]
            then
              PULL_URL=$(jq '.[0].html_url' <<< "$PULL")
              echo "Merge the 7-spring-cloud-microservices branch pull request: ${PULL_URL}"
              echo "Объедините pull request ветки 7-spring-cloud-microservices: ${PULL_URL}"
              exit -9
            fi
            echo "Cloud microservices - Merged"
            if [[ "$GITHUB_BASE_REF" != "main" && "$GITHUB_REPOSITORY_OWNER" != "praktikum-java" ]]
            then
              echo "Set the pull request to merge branch 'main' (instead of '$GITHUB_BASE_REF')"
              echo "Задайте в Pull request ветку слияния 'main' (вместо '$GITHUB_BASE_REF')"
              exit -2
            fi
            echo "Github target '$GITHUB_BASE_REF' - OK"
            exit
          fi
          if [[ "$GITHUB_HEAD_REF" == "9-gateway-microservices" ]] 
          then
            echo "API Gateway microservices - OK"
            PULL=$(gh api -H "Accept: application/vnd.github+json" -H "X-GitHub-Api-Version: 2022-11-28"  /repos/${GITHUB_REPOSITORY}/pulls?head=${GITHUB_REPOSITORY_OWNER}:8-gateway || true)
            OPEN=$(jq '. | length' <<< "$PULL")
            if [[ "$OPEN" != "0" && "$GITHUB_REPOSITORY_OWNER" != "praktikum-java" ]]
            then
              PULL_URL=$(jq '.[0].html_url' <<< "$PULL")
              echo "Merge the 8-gateway branch pull request: ${PULL_URL}"
              echo "Объедините pull request ветки 8-gateway: ${PULL_URL}"
              exit -10
            fi
            echo "API Gateway - Merged"
            if [[ "$GITHUB_BASE_REF" != "main" && "$GITHUB_REPOSITORY_OWNER" != "praktikum-java" ]]
            then
              echo "Set the pull request to merge branch 'main' (instead of '$GITHUB_BASE_REF')"
              echo "Задайте в Pull request ветку слияния 'main' (вместо '$GITHUB_BASE_REF')"
              exit -2
            fi
            echo "Github target '$GITHUB_BASE_REF' - OK"
            exit
          fi
          echo "Correct branch name '$GITHUB_HEAD_REF' according to the spec, allowed: 1-collector-json, 2-collector-grpc, 3-aggregator, 4-analyzer, develop, 5-config-server, 6-discovery-server, 7-spring-cloud-microservices, 8-gateway, 9-gateway-microservices"
          echo "Исправьте пожалуйста имя ветки '$GITHUB_HEAD_REF' согласно заданию, разрешены: 1-collector-json, 2-collector-grpc, 3-aggregator, 4-analyzer, develop, 5-config-server, 6-discovery-server, 7-spring-cloud-microservices, 8-gateway, 9-gateway-microservices"
          exit -1
        env:
          GH_TOKEN: ${{ github.token }}

      - name: Check files
        run: |
          PULL=$(gh api -H "Accept: application/vnd.github+json" -H "X-GitHub-Api-Version: 2022-11-28"  /repos/${GITHUB_REPOSITORY}/pulls/${PULL_NUMBER}/files?per_page=100 || true)
          FILENAMES=$(jq '.[] | .filename' <<< "$PULL")
          if [[ "$FILENAMES"  =~ "api-tests.yml" ]]
          then
            echo "The pull request contains the api-tests.yml file and cannot be modified. Remove it from PR"
            echo "Pull request содержит файл api-tests.yml, его изменять нельзя. Удалите его из PR"
            exit -1
          fi
          if [[ "$FILENAMES"  =~ "checkstyle.xml" ]]
          then
            echo "The pull request contains the checkstyle.xml file and cannot be modified. Remove it from PR"
            echo "Pull request содержит файл checkstyle.xml, его изменять нельзя. Удалите его из PR"
            exit -2
          fi
          if [[ "$FILENAMES"  =~ "hub-router.jar" ]]
          then
            echo "The pull request contains the hub-router.jar file and cannot be modified. Remove it from PR"
            echo "Pull request содержит файл hub-router.jar, его изменять нельзя. Удалите его из PR"
            exit -3
          fi
          if [[ "$FILENAMES"  =~ ".class" ]] || [[ "$FILENAMES"  =~ ".jar" ]] || [[ "$FILENAMES"  =~ "mvn" ]] || [[ "$FILENAMES"  =~ ".DS_Store" ]] \
          || [[ "$FILENAMES"  =~ ".idea" ]] || [[ "$FILENAMES"  =~ ".iws" ]] || [[ "$FILENAMES"  =~ ".iml" ]] || [[ "$FILENAMES"  =~ ".ipr" ]] \
          || [[ "$FILENAMES"  =~ ".db" ]] || [[ "$FILENAMES"  =~ ".log" ]] || [[ "$FILENAMES"  =~ "out/" ]] || [[ "$FILENAMES"  =~ "target/" ]]
          then
            echo "The pull request contains the binary files. Remove them (*.class, *.jar, *.DS_Store ...) from PR"
            echo "Pull request содержит двоичные файлы. Удалите их (*.class, *.jar, *.DS_Store ...) из PR"
            exit -4
          fi
          echo "PR files - OK"
          exit
        env:
          PULL_NUMBER: ${{ github.event.number }}
          GH_TOKEN: ${{ github.token }}

  build-and-test:
    needs: check-repo
    if: always() && needs.check-repo.result != 'failure'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout target repo
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: maven

      - name: Cache Maven dependencies
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Check and Build application
        run: |
          mvn clean install -DskipTests --no-transfer-progress

      - name: Checkout tests
        uses: actions/checkout@v4
        with:
          repository: 'yandex-praktikum/plus-smart-home-tech'
          ref: ${{ github.event.pull_request.head.ref }}
          path: tests

      - name: Start infrastructure for telemetry services
        if: |
          contains(fromJson('["1-collector-json", "2-collector-grpc", "3-aggregator", "4-analyzer"]'), github.ref_name) || 
          contains(fromJson('["1-collector-json", "2-collector-grpc", "3-aggregator", "4-analyzer"]'), github.head_ref)
        run: |
          if [ -f "docker-compose.yaml" ]; then
            docker compose -f docker-compose.yaml up --detach
          elif [ -f "compose.yaml" ]; then
            docker compose -f compose.yaml up --detach
          elif [ -f "docker-compose.yml" ]; then
            docker compose -f docker-compose.yml up --detach
          else
            echo "Не найден файл docker-compose.yaml!"
            exit 1
          fi
          chmod a+x ./tests/.github/workflows/wait-for-it.sh
          ./tests/.github/workflows/wait-for-it.sh localhost:9092 --timeout=60 --strict -- echo "Kafka is up"
          docker compose ps
          docker compose logs

      - name: Verify JAR files and Start Telemetry Services
        if: |
          contains(fromJson('["1-collector-json", "2-collector-grpc", "3-aggregator", "4-analyzer"]'), github.ref_name) || 
          contains(fromJson('["1-collector-json", "2-collector-grpc", "3-aggregator", "4-analyzer"]'), github.head_ref)
        run: |
          echo "Проверка наличия JAR-файлов и запуск нужных сервисов..."
          
          # Проверяем наличие JAR-файлов
          COLLECTOR_JAR=$(find ./ -name "*collector*.jar" | head -n 1)
          AGGREGATOR_JAR=$(find ./ -name "*aggregator*.jar" | head -n 1)
          ANALYZER_JAR=$(find ./ -name "*analyzer*.jar" | head -n 1)
          
          echo "Найденные JAR-файлы:"
          echo "Collector: $COLLECTOR_JAR"
          echo "Aggregator: $AGGREGATOR_JAR"
          echo "Analyzer: $ANALYZER_JAR"
          
          # Определяем ветку
          BRANCH_NAME=${GITHUB_HEAD_REF:-${GITHUB_REF##*/}}
          echo "Текущая ветка: $BRANCH_NAME"
          
          # Логика запуска в зависимости от ветки
          case "$BRANCH_NAME" in
            "1-collector-json")
              if [ -z "$COLLECTOR_JAR" ]; then
                echo "Ошибка: JAR-файл для сервиса Collector не найден."
                exit 1
              fi
              echo "Запуск сервиса Collector..."
              nohup java -jar $COLLECTOR_JAR --server.port=8080 --logging.file.name=./logs/collector.log &
              ;;
            "2-collector-grpc")
              if [ -z "$COLLECTOR_JAR" ]; then
                echo "Ошибка: JAR-файл для сервиса Collector не найден."
                exit 1
              fi
              echo "Запуск сервиса Collector..."
              nohup java -jar $COLLECTOR_JAR --grpc.server.port=59091 --logging.file.name=./logs/collector.log &
              ;;
            "3-aggregator")
              if [ -z "$COLLECTOR_JAR" ] || [ -z "$AGGREGATOR_JAR" ]; then
                echo "Ошибка: Не найдены JAR-файлы для сервиса Collector и/или сервиса Aggregator."
                exit 1
              fi
              echo "Запуск Collector..."
              nohup java -jar $COLLECTOR_JAR --grpc.server.port=59091 --logging.file.name=./logs/collector.log &
              ./tests/.github/workflows/wait-for-it.sh localhost:59091 --timeout=30 --strict -- echo "Collector is up"
              echo "Запуск Aggregator..."
              nohup java -jar $AGGREGATOR_JAR --logging.file.name=./logs/aggregator.log &
              ;;
            "4-analyzer")
              if [ -z "$COLLECTOR_JAR" ] || [ -z "$AGGREGATOR_JAR" ] || [ -z "$ANALYZER_JAR" ]; then
                echo "Ошибка: Не найдены JAR-файлы для сервисов Collector, Aggregator и/или Analyzer."
                exit 1
              fi
              echo "Запуск Collector..."
              nohup java -jar $COLLECTOR_JAR --grpc.server.port=59091 --logging.file.name=./logs/collector.log &
              ./tests/.github/workflows/wait-for-it.sh localhost:59091 --timeout=30 --strict -- echo "Collector is up"
              echo "Запуск Aggregator..."
              nohup java -jar $AGGREGATOR_JAR --logging.file.name=./logs/aggregator.log &
              echo "Запуск Analyzer..."
              nohup java -jar $ANALYZER_JAR --logging.file.name=./logs/analyzer.log &
              ;;
            *)
              echo "Ошибка: Ветка $BRANCH_NAME не поддерживается этим workflow."
              exit 1
              ;;
          esac
          
          # Дожидаемся готовности микросервисов
          echo "Ожидание готовности микросервисов..."
          sleep 20

      - name: Test Telemetry Services
        if: |
          contains(fromJson('["1-collector-json", "2-collector-grpc", "3-aggregator", "4-analyzer"]'), github.ref_name) || 
          contains(fromJson('["1-collector-json", "2-collector-grpc", "3-aggregator", "4-analyzer"]'), github.head_ref)
        run: |
          BRANCH_NAME=${GITHUB_HEAD_REF:-${GITHUB_REF##*/}}
          
          echo "Запуск сервиса Hub Router с настройками для ветки $BRANCH_NAME"
          
          # Определяем параметры запуска hub-router
          CONFIG_ARGS="--hub-router.execution.immediate-logging.enabled=false --hub-router.execution.output.only-errors=false --hub-router.execution.output.print=true --hub-router.execution.output.file=true"
          case "$BRANCH_NAME" in
            "1-collector-json")
              CONFIG_ARGS="$CONFIG_ARGS --hub-router.execution.collector.mode=http --hub-router.execution.collector.port=8080 --hub-router.execution.mode=COLLECTION"
              ;;
            "2-collector-grpc")
              CONFIG_ARGS="$CONFIG_ARGS --hub-router.execution.collector.port=59091 --hub-router.execution.mode=COLLECTION"
              ;;
            "3-aggregator")
              CONFIG_ARGS="$CONFIG_ARGS --hub-router.execution.collector.port=59091 --hub-router.execution.mode=AGGREGATION"
              ;;
            "4-analyzer")
              CONFIG_ARGS="$CONFIG_ARGS --hub-router.execution.collector.port=59091 --hub-router.execution.mode=ANALYZE"
              ;;
            *)
              echo "Ошибка: Ветка $BRANCH_NAME не поддерживается для тестов."
              exit 1
              ;;
          esac
          
          # Запуск hub-router с нужными аргументами
          java -jar ./tests/.github/workflows/hub-router.jar $CONFIG_ARGS
        continue-on-error: false

      - name: Capture Status
        if: always()
        run: echo "STATUS=$?" >> $GITHUB_ENV

      - name: Compose down
        if: always()
        run: docker compose down

      - name: Upload execution log artifact
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: logs-and-execution-report
          path: |
            execution-report.txt
            ./logs/*.log

      - name: Success
        if: env.STATUS == '0'
        run: echo "Проверка прошла успешно!"