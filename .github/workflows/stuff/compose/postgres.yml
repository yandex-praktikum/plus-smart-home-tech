services:
  postgres:
    image: postgres:16.1
    container_name: postgres
    hostname: postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: telemetry_analyzer
    healthcheck:
      test: pg_isready -q -d $$POSTGRES_DB -U $$POSTGRES_USER
      timeout: 5s
      interval: 5s
      retries: 10
    ports:
      - "${POSTGRES_PORT}:5432"

  db-init:
    image: postgres:16.1
    container_name: db-init
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_PORT: ${POSTGRES_PORT}
    entrypoint:
      - bash
      - -c
      - |
        set -e
        echo "⏳ Подключение к PostgreSQL на ${POSTGRES_HOST:-postgres}:${POSTGRES_PORT}..."
        PGPASSWORD="${POSTGRES_PASSWORD}" psql -h "${POSTGRES_HOST:-postgres}" -p "${POSTGRES_PORT}" -U "${POSTGRES_USER}" -d postgres -v ON_ERROR_STOP=1 <<-EOSQL
        CREATE DATABASE commerce_shopping_cart;
        CREATE DATABASE commerce_shopping_store;
        CREATE DATABASE commerce_warehouse;
        CREATE DATABASE commerce_order;
        CREATE DATABASE commerce_delivery;
        CREATE DATABASE commerce_payment;
        EOSQL