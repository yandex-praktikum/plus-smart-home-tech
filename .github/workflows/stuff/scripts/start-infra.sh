#!/bin/bash

set -e  # –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –ø—Ä–∏ –æ—à–∏–±–∫–µ

COMPOSE_PATH="${STUFF_PATH:-.github/workflows/stuff}/compose"
BRANCH_NAME=${GITHUB_HEAD_REF:-${GITHUB_REF##*/}}
LOG_DIR="${LOG_DIR:-./logs}"
mkdir -p "$LOG_DIR"

POSTGRES_USER=${POSTGRES_USER:-postgres}
POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-password}
POSTGRES_PORT=${POSTGRES_PORT:-5432}

# –û–ø—Ä–µ–¥–µ–ª—è–µ–º, –∫–∞–∫–∏–µ docker-compose —Ñ–∞–π–ª—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å
COMPOSE_FILES="$COMPOSE_PATH/docker-compose.yml" # –≤ docker-compose.yml –º–æ–∂–Ω–æ –ø–æ–º–µ—Å—Ç–∏—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∞–∫—Ç—É–∞–ª—å–Ω—ã–µ –¥–ª—è –≤—Å–µ—Ö –≤–µ—Ç–æ–∫

if [[ "$BRANCH_NAME" =~ ^(1-collector-json|2-collector-grpc|3-aggregator|4-analyzer|develop)$ ]]; then
    COMPOSE_FILES="$COMPOSE_FILES -f $COMPOSE_PATH/kafka.yml"
fi

if [[ "$BRANCH_NAME" =~ ^(4-analyzer|5-config-server|6-discovery-server|7-spring-cloud-microservices|8-gateway|9-gateway-microservices|develop)$ ]]; then
    COMPOSE_FILES="$COMPOSE_FILES -f $COMPOSE_PATH/postgres.yml"
fi

echo "üîß –ò—Å–ø–æ–ª—å–∑—É–µ–º—ã–µ —Ñ–∞–π–ª—ã Docker Compose: $COMPOSE_FILES"

echo "üöÄ –ó–∞–ø—É—Å–∫ –∏–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä—ã..."
docker compose -f $COMPOSE_FILES up --detach --wait --quiet-pull

# –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
docker compose logs > "$LOG_DIR/docker-compose.log" 2>&1
docker compose -f $COMPOSE_FILES ps

echo "‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–∏—Å–æ–≤..."
if [[ "$COMPOSE_FILES" == *"kafka.yml"* ]]; then
    echo "üì° –û–∂–∏–¥–∞–Ω–∏–µ Kafka..."
    MAX_RETRIES=10
    RETRY_DELAY=5
    attempt=0
    while ! docker exec kafka kafka-cluster cluster-id --bootstrap-server kafka:29092 &>/dev/null; do
        ((attempt++))
        echo "‚ùå Kafka –µ—â—ë –Ω–µ –≥–æ—Ç–æ–≤–∞, –ø–æ–ø—ã—Ç–∫–∞ $attempt/$MAX_RETRIES..."
        if [[ $attempt -ge $MAX_RETRIES ]]; then
            echo "‚õî –û—à–∏–±–∫–∞: Kafka –Ω–µ –∑–∞–ø—É—Å—Ç–∏–ª–∞—Å—å!"
            exit 1
        fi
        sleep $RETRY_DELAY
    done
    echo "‚úÖ Kafka –≥–æ—Ç–æ–≤–∞!"
fi

if [[ "$COMPOSE_FILES" == *"postgres.yml"* ]]; then
    echo "üõ¢Ô∏è –û–∂–∏–¥–∞–Ω–∏–µ PostgreSQL..."
    MAX_RETRIES=10
    RETRY_DELAY=5
    attempt=0
    until docker exec postgres pg_isready -U postgres &>/dev/null; do
        ((attempt++))
        echo "‚ùå PostgreSQL –µ—â—ë –Ω–µ –≥–æ—Ç–æ–≤, –ø–æ–ø—ã—Ç–∫–∞ $attempt/$MAX_RETRIES..."
        if [[ $attempt -ge $MAX_RETRIES ]]; then
            echo "‚õî –û—à–∏–±–∫–∞: PostgreSQL –Ω–µ –∑–∞–ø—É—Å—Ç–∏–ª—Å—è!"
            exit 1
        fi
        sleep $RETRY_DELAY
    done
    echo "‚úÖ PostgreSQL –≥–æ—Ç–æ–≤!"
fi

echo "üìã –°—Ç–∞—Ç—É—Å –∑–∞–ø—É—â–µ–Ω–Ω—ã—Ö —Å–µ—Ä–≤–∏—Å–æ–≤:"
docker compose -f $COMPOSE_FILES ps

echo "üìÇ –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –ª–æ–≥–æ–≤ –≤ $LOG_DIR..."
docker compose logs > "$LOG_DIR/docker-compose.log" 2>&1

echo "‚úÖ –ò–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä–∞ —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω–∞!"